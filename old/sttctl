#!/usr/bin/env bash
# Helper to control listen-stt-daemon via tmux-friendly commands.
# Usage:
#   sttctl toggle           # toggle listening (sets target to current pane)
#   sttctl start|stop       # explicit
#
# Requires: a running listen-stt-daemon.py and tmux.

set -euo pipefail

PIDFILE=/tmp/listen_stt.pid
TARGETFILE=/tmp/listen_stt_target

die() { echo "sttctl: $*" >&2; exit 1; }

[ -f "$PIDFILE" ] || die "daemon not running (no $PIDFILE)"
PID=$(cat "$PIDFILE" 2>/dev/null || true)
[ -n "${PID:-}" ] || die "empty pidfile"

cmd=${1:-toggle}

# Capture current tmux pane as paste target (if inside tmux)
if [ -n "${TMUX:-}" ]; then
  pane_id=$(tmux display -p '#{pane_id}')
  echo "$pane_id" > "$TARGETFILE"
fi

case "$cmd" in
  toggle)
    kill -USR1 "$PID" || die "failed to signal $PID"
    ;;
  start)
    # two USR1 signals ensure we end up in 'listening' state
    kill -USR1 "$PID" || die "failed to signal"
    sleep 0.05
    ;;
  stop)
    kill -USR1 "$PID" || die "failed to signal"
    ;;
  *)
    die "unknown command: $cmd"
    ;;
esac

echo "ok"

